def createStaticPicLibraryBuilder(env):
    """This is a utility function that creates the StaticExtLibrary Builder in
    an Environment if it is not there already.

    If it is already there, we return the existing one."""
    import SCons.Action

    try:
        static_extlib = env['BUILDERS']['StaticPicLibrary']
    except KeyError:
        action_list = [ SCons.Action.Action("$ARCOM", "$ARCOMSTR") ]
        if env.Detect('ranlib'):
            ranlib_action = SCons.Action.Action("$RANLIBCOM", "$RANLIBCOMSTR")
            action_list.append(ranlib_action)

    static_extlib = SCons.Builder.Builder(action = action_list,
                                          emitter = '$LIBEMITTER',
                                          prefix = '$LIBPREFIX',
                                          suffix = '$LIBSUFFIX',
                                          src_suffix = '$OBJSUFFIX',
                                          src_builder = 'SharedObject')

    env['BUILDERS']['StaticPicLibrary'] = static_extlib
    return static_extlib

Import("env install dest")
createStaticPicLibraryBuilder(env)

c_files = Glob( "*.c" )

lib = env.SharedLibrary( "#lib/libkoki", c_files )
static_lib = env.StaticPicLibrary( "#lib/libkoki", c_files )

install += [ env.Install( dir = dest( "/usr/lib" ),
                          source = lib ) ]
install += [ env.Install( dir = dest( "/usr/lib" ),
                          source = static_lib ) ]

# Also install the library with a version
install += [ env.InstallAs( target = dest( "/usr/lib/libkoki.so.0.0" ),
                            source = lib ) ]
